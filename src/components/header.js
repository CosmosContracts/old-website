import React from "react";
import {Link} from "gatsby";

const menu = require('../contents/urls.json');

class Header extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            menuOpen: false
        };
    }
    componentDidMount() {
        window.addEventListener("scroll", this.toggleHeaderClass);
        this.toggleHeaderClass();
    }
    toggleMenu = function(){
        document.getElementById('menu').classList.toggle('open');
    }
    toggleHeaderClass = () => {
        if(!document.getElementById("header").classList.contains('menu-opened')){
            if (window.scrollY > 100) {
                document.getElementById("header").classList.add("blur");
            } else {
                document.getElementById("header").classList.remove("blur");
            }
        }
    };
    render() {
        return (
            <header id={'header'} className={this.state.menuOpen ? 'menu-opened blur' : 'blur'}>
                <div className={'header-bg'}/>
                <div className={'container'}>
                    <Link to={'/'}>
                        <div className={'logo'}>
                            <svg width="141px" height="52px" viewBox="0 0 141 52" version="1.1" xmlns="http://www.w3.org/2000/svg">
                                <g id="Symbols" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
                                    <g id="LOGO-NEW" transform="translate(1.000000, 1.000000)">
                                        <path d="M49.9018416,24.9509208 C49.9018416,38.7311351 38.7309458,49.9018416 24.9509208,49.9018416 C11.1708959,49.9018416 0,38.7311351 0,24.9509208 C0,11.1708959 11.1708959,0 24.9509208,0 C38.7309458,0 49.9018416,11.1708959 49.9018416,24.9509208" id="Fill-1" stroke="#FFFFFF" strokeWidth="2"></path>
                                        <polygon id="Fill-3" fill="#FFFFFF" points="35.2761068 18.717137 28.6771017 18.4438267 33.1587091 13.5901084 31.3555047 11.786904 26.4962975 16.2596156 26.2330187 9.65852842 23.6825642 9.65852842 23.4094432 16.2573443 18.5559142 11.7757368 16.7523312 13.5791305 21.2252321 18.4383377 14.6239557 18.7016166 14.6239557 21.2518817 21.2229608 21.525192 16.7413534 26.3789103 18.5447471 28.1824933 23.3291914 23.7781092 23.5373918 34.4684408 19.7207006 34.7476186 19.7207006 37.1228062 23.5949308 37.4169365 23.6672331 41.1300953 26.2174983 41.1300953 26.2924504 37.4224254 30.207185 37.125456 30.207185 34.7502684 26.3522607 34.4682515 26.5682212 23.7832196 31.3443376 28.1932819 33.1481098 26.3898882 28.6750196 21.530681 35.2761068 21.2674021"></polygon>
                                        <path d="M91.2289892,34.6796128 C90.2805419,35.2215015 89.1288153,35.4927298 87.7399296,35.4927298 C84.4543386,35.4927298 82.8669055,33.5943211 82.1849547,31.6989407 C81.6546116,30.2250714 81.6430659,29.24123 81.6430659,28.4283022 L81.6430659,18.2512792 L86.418993,18.2512792 L86.418993,28.2098811 C86.418993,29.8698058 87.4352,31.3601419 89.4337342,31.3601419 C91.4661483,31.3601419 92.8887246,29.9373763 92.8887246,28.4133496 L92.8887246,18.2173993 L97.6309611,18.2173993 L97.6309611,35.0184115 L93.5085939,35.0184115 L93.0242441,32.9523068 C92.787085,33.5280755 92.2113163,34.1038441 91.2289892,34.6796128" id="Fill-5" fill="#FFFFFF"></path>
                                        <path d="M105.61412,18.3191525 L106.167365,20.6901761 C107.352972,18.9965608 108.775548,18.0481135 110.469163,17.8448342 C113.754944,17.438465 116.024328,18.8949211 116.972775,20.8256956 C117.480784,21.8757825 117.717943,23.6710375 117.717943,26.2114605 L117.717943,35.0185251 L113.145106,35.0185251 L113.145106,26.0081812 C113.145106,23.0275091 112.298109,21.8757825 109.723995,21.8757825 C108.064071,21.8757825 106.404524,23.6371576 106.404524,26.6517096 L106.404524,35.0185251 L101.831687,35.0185251 L101.831687,18.3191525 L105.61412,18.3191525 Z" id="Fill-7" fill="#FFFFFF"></path>
                                        <path d="M134.254049,26.5841391 C134.254049,28.0405953 133.813799,29.2262017 132.933112,30.1068893 C132.086115,30.9875768 131.036217,31.4280152 129.81692,31.4280152 C129.147272,31.4280152 128.529106,31.2943884 127.961666,31.028649 L134.01935,24.9711541 C134.175122,25.4643997 134.254049,26.0000425 134.254049,26.5841391 L134.254049,26.5841391 Z M125.345534,26.5841391 C125.345534,25.1952534 125.785972,24.077596 126.66647,23.1630286 C127.581227,22.2484612 128.631314,21.8080228 129.81692,21.8080228 C130.491489,21.8080228 131.122147,21.9511132 131.702837,22.242783 L125.600863,28.3447571 C125.430706,27.8119534 125.345534,27.2244499 125.345534,26.5841391 L125.345534,26.5841391 Z M140,18.9903148 L137.477558,16.468062 L134.761679,19.1839411 C133.315822,18.1968821 131.656465,17.7093147 129.782851,17.7093147 C127.276308,17.7093147 125.176134,18.5563116 123.448639,20.2838068 C121.721144,22.011302 120.874336,24.077596 120.874336,26.55007 C120.874336,28.4335262 121.367014,30.1000754 122.364672,31.5809478 L119.93611,34.0095104 L122.458362,36.5321417 L124.863455,34.127049 C126.28887,35.1093762 127.924,35.5942937 129.782851,35.5942937 C132.255514,35.5942937 134.355688,34.7136062 136.083183,32.9183513 C137.810679,31.122907 138.657675,29.0231117 138.657675,26.55007 C138.657675,24.7302095 138.196985,23.1310414 137.265951,21.7243641 L140,18.9903148 Z" id="Fill-9" fill="#FFFFFF"></path>
                                        <path d="M72.7870552,13.3697756 L72.7870552,26.9228622 C72.7870552,29.4632852 71.3305991,30.9875011 69.4335152,30.9875011 C68.0111282,30.9875011 66.8525878,30.155646 65.9929096,28.138563 L61.7319945,30.5877564 C63.2100278,33.9172587 65.9535408,35.5944073 69.9419026,35.5944073 C72.1435268,35.5944073 74.0063523,34.7474104 75.4629977,33.0876749 C76.9196432,31.3940596 77.6648112,29.2600059 77.6648112,26.7195829 L77.5803954,13.3697756 L72.7870552,13.3697756 Z" id="Fill-11" fill="#FFFFFF"></path>
                                    </g>
                                </g>
                            </svg>
                        </div>
                    </Link>

                    <button className={this.state.menuOpen ? 'hamburger hamburger--slider is-active' : 'hamburger hamburger--slider'} type="button" onClick={() => this.setState({ menuOpen: !this.state.menuOpen })}>
                          <span className="hamburger-box">
                            <span className="hamburger-inner"/>
                          </span>
                    </button>

                    <nav>
                        <ul>
                            <li><Link to={menu.ecosystem}>Ecosystem</Link></li>
                            <li><a href={menu.docs} target={'_blank'} rel={'noreferrer'}>Docs</a></li>
                            <li><a href={menu.blog} target={'_blank'} rel={'noreferrer'}>Blog</a></li>
                            <li><a href={menu.updates} target={'_blank'} rel={'noreferrer'}>Updates</a></li>
                            <li><Link to={menu.grants}>Grants</Link></li>
                            <li className={'social'}><a href={menu.github} target={'_blank'} rel={'noreferrer'}><i className={'icon-social-github'} aria-label={'Github'}></i></a></li>
                            <li className={'social'}><a href={menu.discord} target={'_blank'} rel={'noreferrer'}><i className={'icon-social-discord'} aria-label={'Discord'}></i></a></li>
                        </ul>
                    </nav>
                </div>
            </header>
        );
    }
}

export default Header;
